name: Release

on:
  push:
    branches:
      - main
    paths:
      - 'version.txt'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from version.txt
        id: version
        run: |
          VERSION=$(cat version.txt | tr -d '\n\r')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Check if tag exists
        id: tag_check
        run: |
          if git tag --list | grep -q "^v${{ steps.version.outputs.version }}$"; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Tag v${{ steps.version.outputs.version }} already exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Tag v${{ steps.version.outputs.version }} does not exist"
          fi

      - name: Update manifest.json version
        if: steps.tag_check.outputs.exists == 'false'
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          sed -i "s/\"version\": \".*\"/\"version\": \"$VERSION\"/" custom_components/eufylife_api/manifest.json
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add custom_components/eufylife_api/manifest.json
          git commit -m "Update manifest.json version to $VERSION" || exit 0

      - name: Push changes
        if: steps.tag_check.outputs.exists == 'false'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main

      - name: Generate changelog
        if: steps.tag_check.outputs.exists == 'false'
        id: changelog
        run: |
          # Get the latest tag
          LATEST_TAG=$(git tag --sort=-version:refname | head -n 1)
          
          # If no previous tag exists, use initial commit
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG=$(git rev-list --max-parents=0 HEAD)
          fi
          
          # Generate changelog
          CHANGELOG=$(git log ${LATEST_TAG}..HEAD --pretty=format:"- %s" --no-merges)
          
          # If changelog is empty, provide a default message
          if [ -z "$CHANGELOG" ]; then
            CHANGELOG="- Version ${{ steps.version.outputs.version }} release"
          fi
          
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        if: steps.tag_check.outputs.exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          body: |
            ## Changes in v${{ steps.version.outputs.version }}
            
            ${{ steps.changelog.outputs.changelog }}
            
            ## Installation
            
            ### HACS (Recommended)
            1. Have HACS installed
            2. In the HACS panel, go to "Integrations"
            3. Click the "+ EXPLORE & DOWNLOAD REPOSITORIES" button
            4. Search for "EufyLife API"
            5. Download this integration
            6. Restart Home Assistant
            
            ### Manual Installation
            1. Download the latest release
            2. Extract the files to your `custom_components/eufylife_api/` directory
            3. Restart Home Assistant
          draft: false
          prerelease: false 